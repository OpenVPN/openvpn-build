# The name of our workflow
name: Build
on:
  push:
  pull_request:
  repository_dispatch:
    types: [openvpn-commit]

jobs:
  msvc:
    strategy:
      matrix:
        arch: [x86, amd64, arm64]

    env:
      CMAKE: cmake.exe
      VCPKG_ROOT: ${{ github.workspace }}\vcpkg
      OSSL: ossl3
      VCPKG_OVERLAY_PORTS: ${{ github.workspace }}\openvpn-build\windows-msi\vcpkg-ports
      WIX: ${{ github.workspace }}\wix\

    name: 'openvpn-build'
    runs-on: windows-2019

    steps:
      - name: Checkout openvpn-build
        uses: actions/checkout@v2
        with:
          path: openvpn-build

      - name: Checkout openvpn
        uses: actions/checkout@v2
        with:
          repository: openvpn/openvpn
          ref: master
          path: openvpn

      - name: Checkout openvpn-gui
        uses: actions/checkout@v2
        with:
          repository: openvpn/openvpn-gui
          path: openvpn-gui

      - name: Checkout vcpkg
        uses: actions/checkout@v2
        with:
          repository: microsoft/vcpkg
          path: vcpkg
          fetch-depth: 0

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Install rst2html
        run: python -m pip install --upgrade pip rst2html

      - name: Setup MSVC prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Wix 3.14
        run: |
          Invoke-WebRequest -Uri "https://wixdl.blob.core.windows.net/releases/v3.14.0.5722/wix314-binaries.zip" -OutFile wix.zip
          Expand-Archive -Path .\wix.zip -DestinationPath wix\bin

      - name: Bump version
        working-directory: openvpn-build/windows-msi
        run: |
          $NewProductCode = (New-Guid).ToString().ToUpper()
          $BuildVersion = 10000 + [int]$env:GITHUB_RUN_NUMBER
          $NewProductVersion = "2.6.$BuildVersion"
          echo $NewProductCode $NewProductVersion
          $version_m4 = (Get-Content version.m4)
          $version_m4 -replace '^define\(\[PRODUCT_CODE\], \[\{(?<ProductCode>.*)\}]\)', "define([PRODUCT_CODE], [{${NewProductCode}}])" `
            -replace '^define\(\[PRODUCT_VERSION\], \[(.*?)\]\)', "define([PRODUCT_VERSION], [${NewProductVersion}])" | Out-File -Encoding ASCII version.m4

      - name: Build
        working-directory: openvpn-build/windows-msi
        run: |
          New-Item -Name build-and-package-env.ps1 -ItemType File
          ./build-and-package.ps1 -basedir ../.. -ossl ossl3 -nosign -arch ${{ matrix.arch }} -nodevprompt

      - name: Get openvpn commit id
        working-directory: openvpn
        run: |
          $commit = git rev-parse --short HEAD
          echo "OPENVPN_COMMIT=$commit" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

      - name: Get datetime
        run: |
          $dt = Get-Date -Format "yyyyMMddThhmm"
          echo "DATETIME=${dt}" >> $Env:GITHUB_ENV

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: openvpn-master-${{ env.DATETIME }}-${{ env.OPENVPN_COMMIT }}-${{ matrix.arch }}
          path: ${{ github.workspace }}\openvpn-build\windows-msi\image\*-${{ matrix.arch }}.msi

  upload_msis:
    needs: msvc
    name: upload-msis
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' && github.repository == 'openvpn/openvpn-build' }}

    steps:
      - name: Install knock
        run: sudo apt install knockd

      - name: Get artifacts
        uses: actions/download-artifact@v3
        with:
          path: msi

      - name: Flatter and rename artifacts
        working-directory: msi
        run: find -name '*.msi' -printf "%p\n" | while read f; do mv $f $(dirname $f).msi; rm -rf $(dirname $f); done

      - name: Knock ports on remote
        run: knock -d 500 ${{ secrets.MSI_UPLOAD_REMOTE_HOST }} ${{ secrets.MSI_UPLOAD_REMOTE_KNOCK_SEQUENCE }} ; sleep 1

      - name: Copy MSI to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: msi
          remote: ${{ secrets.MSI_UPLOAD_REMOTE_PATH }}
          host: ${{ secrets.MSI_UPLOAD_REMOTE_HOST }}
          port: ${{ secrets.MSI_UPLOAD_REMOTE_PORT }}
          username: ${{ secrets.MSI_UPLOAD_USERNAME }}
          privateKey: ${{ secrets.MSI_UPLOAD_PRIVATE_KEY }}
          passphrase: ${{ secrets.MSI_UPLOAD_KEY_PASSPHRASE }}
